class p{providers=new Map;register(t){this.providers.set(t.id,t)}get(t){return this.providers.get(t)}has(t){return this.providers.has(t)}}import{object as S,string as h,number as C,boolean as R,array as M,optional as m,record as E}from"dhi";var N=S({role:h(),content:h(),name:m(h()),tool_call_id:m(h())}),T=S({provider:h(),model:h(),messages:M(N),temperature:m(C()),max_tokens:m(C()),top_p:m(C()),stream:m(R()),json:m(R()),extraHeaders:m(E(h()))});function G(t){if(!["openai","anthropic","groq","gemini","openrouter","sambanova"].includes(t))throw new Error(`Unknown provider: ${t}`)}function y(t){let n=T.safeParse(t);if(!n.success){let e=n.error?.toString?.()??"Invalid request";throw new Error(e)}G(n.data.provider);let s=t?.signal;return{...n.data,signal:s}}function f(t,n){if(n.startsWith("http"))return n;return`${t.replace(/\/$/,"")}/${n.replace(/^\//,"")}`}async function g(t,n={}){let{method:s="POST",headers:e={},body:a,signal:i}=n,o={method:s,headers:e,body:typeof a==="string"||a instanceof Uint8Array?a:a?JSON.stringify(a):void 0,signal:i};return fetch(t,o)}async function*J(t){let n=t.getReader(),s=new TextDecoder,e="";try{while(!0){let{done:a,value:i}=await n.read();if(a)break;e+=s.decode(i,{stream:!0});let o;while((o=e.indexOf(`
`))!==-1){let c=e.slice(0,o);e=e.slice(o+1),yield c.replace(/\r$/,"")}}if(e.length>0)yield e}finally{n.releaseLock()}}async function*x(t){let n=[],s;for await(let e of J(t)){if(e===""){let c=n.length?n.join(`
`):void 0;yield c||s?{event:s,data:c}:null,n=[],s=void 0;continue}if(e.startsWith(":"))continue;let a=e.indexOf(":"),i=a===-1?e:e.slice(0,a),o=a===-1?"":e.slice(a+1).replace(/^\s*/,"");if(i==="event")s=o;else if(i==="data")n.push(o)}}var _="https://api.openai.com/v1";function L(t,n){let s=(t.choices??[]).map((e,a)=>({index:e.index??a,message:e.message??{role:"assistant",content:""},finish_reason:e.finish_reason??null}));return{id:t.id??"unknown",created:t.created??Math.floor(Date.now()/1000),model:t.model??"unknown",choices:s,usage:t.usage,provider:n,raw:t}}function A(t,n){return{...t||{},...n||{}}}class w{id="openai";name="OpenAI";async chat(t,n,s){let e=f(s||_,"/chat/completions"),a=A({Authorization:`Bearer ${n||""}`,"Content-Type":"application/json",Accept:"application/json"},t.extraHeaders),i={model:t.model,messages:t.messages,temperature:t.temperature,top_p:t.top_p,max_tokens:t.max_tokens,stream:!1};if(t.json)i.response_format={type:"json_object"};let o=await g(e,{method:"POST",headers:a,body:i,signal:t.signal});if(!o.ok){let u=await o.text();throw new Error(`OpenAI error ${o.status}: ${u}`)}let c=await o.json();return L(c,this.id)}async*streamChat(t,n,s){let e=f(s||_,"/chat/completions"),a=A({Authorization:`Bearer ${n||""}`,"Content-Type":"application/json",Accept:"text/event-stream"},t.extraHeaders),i={model:t.model,messages:t.messages,temperature:t.temperature,top_p:t.top_p,max_tokens:t.max_tokens,stream:!0};if(t.json)i.response_format={type:"json_object"};let o=await g(e,{method:"POST",headers:a,body:i,signal:t.signal});if(!o.ok||!o.body){let c=await o.text();throw new Error(`OpenAI stream error ${o.status}: ${c}`)}for await(let c of x(o.body)){if(!c||!c.data)continue;if(c.data==="[DONE]")return;try{let u=JSON.parse(c.data),r=u.choices?.[0],l=r?.delta||{};yield{id:u.id,created:u.created,model:u.model,delta:{role:l.role,content:l.content},finish_reason:r?.finish_reason??null,raw:u}}catch(u){}}}}var I="https://api.anthropic.com",O="2023-06-01";function $(t){let n=[],s=[];for(let a of t.messages)if(a.role==="system")n.push(a.content);else if(a.role==="user"||a.role==="assistant")s.push({role:a.role,content:a.content});return{system:n.length?n.join(`
`):void 0,messages:s}}function W(t,n,s){let a={role:"assistant",content:Array.isArray(t.content)?t.content.map((i)=>i.text||"").join(""):t.content?.[0]?.text||""};return{id:t.id??"unknown",created:Math.floor(Date.now()/1000),model:s,choices:[{index:0,message:a,finish_reason:t.stop_reason??null}],provider:n,raw:t}}class P{id="anthropic";name="Anthropic";async chat(t,n,s){let a=f(s||I,"/v1/messages"),{system:i,messages:o}=$(t),c={"x-api-key":n||"","content-type":"application/json","anthropic-version":O,...t.extraHeaders||{}},u={model:t.model,max_tokens:t.max_tokens??1024,temperature:t.temperature,system:i,messages:o},r=await g(a,{method:"POST",headers:c,body:u,signal:t.signal});if(!r.ok){let d=await r.text();throw new Error(`Anthropic error ${r.status}: ${d}`)}let l=await r.json();return W(l,this.id,t.model)}async*streamChat(t,n,s){let a=f(s||I,"/v1/messages"),{system:i,messages:o}=$(t),c={"x-api-key":n||"","content-type":"application/json",accept:"text/event-stream","anthropic-version":O,...t.extraHeaders||{}},u={model:t.model,max_tokens:t.max_tokens??1024,temperature:t.temperature,system:i,messages:o,stream:!0},r=await g(a,{method:"POST",headers:c,body:u,signal:t.signal});if(!r.ok||!r.body){let l=await r.text();throw new Error(`Anthropic stream error ${r.status}: ${l}`)}for await(let l of x(r.body)){if(!l||!l.data)continue;try{let d=JSON.parse(l.data),k=d.type;if(k==="content_block_delta"&&d.delta?.type==="text_delta")yield{delta:{role:"assistant",content:d.delta.text||""},raw:d};else if(k==="message_stop")return}catch{}}}}function D(t){try{return typeof process!=="undefined"&&process?.env?.[t]||void 0}catch{return}}function V(t){return D({openai:"OPENAI_API_KEY",anthropic:"ANTHROPIC_API_KEY",groq:"GROQ_API_KEY",gemini:"GEMINI_API_KEY",openrouter:"OPENROUTER_API_KEY",sambanova:"SAMBANOVA_API_KEY"}[t])}function z(t){switch(t){case"openai":return"https://api.openai.com/v1";case"anthropic":return"https://api.anthropic.com";default:return}}class b{registry;config;constructor(t={},n){this.config=t,this.registry=n??new p}static createDefault(t={}){let n=new b(t);return n.use(new w),n.use(new P),n}use(t){return this.registry.register(t),this}apiKeyFor(t){return this.config.apiKeys?.[t]??V(t)}baseUrlFor(t){if(this.config.baseUrls?.[t])return this.config.baseUrls[t];if(this.config.proxy)switch(t){case"openai":return`${this.config.proxy.replace(/\/$/,"")}/openai/v1`;case"anthropic":return`${this.config.proxy.replace(/\/$/,"")}/anthropic`;default:return this.config.proxy}return z(t)}async chat(t){let n=y(t),s=this.registry.get(n.provider);if(!s)throw new Error(`Provider not registered: ${n.provider}`);let e=this.apiKeyFor(s.id),a=this.baseUrlFor(s.id);return s.chat({...n,stream:!1},e,a)}streamChat(t){let n=y({...t,stream:!0}),s=this.registry.get(n.provider);if(!s||!s.streamChat)throw new Error(`Provider does not support streaming: ${n.provider}`);let e=this.apiKeyFor(s.id),a=this.baseUrlFor(s.id);return s.streamChat(n,e,a)}async streamToText(t){let n="";for await(let s of this.streamChat({...t,stream:!0})){let e=s.delta?.content;if(typeof e==="string")n+=e}return n}}export{y as validateChatRequest,p as ProviderRegistry,w as OpenAIProvider,b as HRI,P as AnthropicProvider};

//# debugId=9C64BE81EF02840664756E2164756E21
//# sourceMappingURL=index.js.map
