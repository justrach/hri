name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure tag points to main
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          set -euo pipefail
          echo "Verifying tag is on main..."
          TAG_REF="${GITHUB_REF#refs/tags/}"
          # Resolve the commit the tag points to (handles lightweight/annotated tags)
          COMMIT_SHA="$(git rev-list -n 1 "$GITHUB_REF")"
          git fetch origin main --depth=1
          if ! git merge-base --is-ancestor "$COMMIT_SHA" origin/main; then
            echo "Tag $TAG_REF does not point to a commit on main. Aborting publish." >&2
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.1.x'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build package
        run: bun run build

      - name: Run tests
        run: bun test

      - name: Ensure tag matches package.json version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Tag version: $TAG_VERSION"
          echo "package.json version: $PKG_VERSION"
          if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then
            echo "Version mismatch: tag v$TAG_VERSION != package.json $PKG_VERSION" >&2
            exit 1
          fi

      - name: Publish to npm
        if: startsWith(github.ref, 'refs/tags/')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --provenance --access public
